
Constructor : 
constructor is a special function which has same name as class name
and it must not have any return type

constructor is used to initialize instance variable. 

you don't need to invoke manually , constructor will call 
automatically when we create object. 


there are three types of constructor we have in cpp 

1) default / no arg constructor 
2) parameterized / argument constructor 
3) copy constructor 


default / no arg constructor 

Employee(){
    basicSalary = 0
    hra = 0; 
    bonus = 0; 
}

argument/parameterized 

Employee(int basic,int h,int bn,int ts){
    basicSalary  = basic; 
    hra = h; 
    bonus = bn; 
}


Employee(int basic){
    basicSalary  = basic; 
    calculateSalary();
}

Employee e; 
Employee x(5000,1000,2000,256000)
Employee j(10000);
--------------------------------------------

Create a class named BankAccount to manage bank accounts.

ðŸ”¸ Data Members (Private):
string accountHolderName

long accountNumber

string accountType ("Savings" or "Current")

double balance

ðŸ”¸ Member Functions:
Default Constructor â€“ sets default values like "Unknown", 0, "Savings", and 0.0.

Parameterized Constructor â€“ to initialize all data members.

void deposit(double amount) â€“ adds amount to balance.

void withdraw(double amount) â€“ subtracts amount from balance if sufficient funds exist, else show "Insufficient Balance".

void displayAccountDetails() â€“ displays all account details.

double getBalance() â€“ returns the current balance.

ðŸ”¹ Requirements:
Create at least two BankAccount objects using both constructors.

Demonstrate deposit and withdraw operations.

Ensure data encapsulation by using private variables and accessing them via member functions only.

inheritance : is the process by which object of one class can access property of another class 

inheritance ->  reusablity 
                remove redudant code 

            in inheritance we share the property of x class to y class 

we have 5 types of inheritance -> 

in inheritance 1 class will share their property with another class 
        class who is sharing property [ giver ] is known as parent class 
        class who takes the property [ taker ] is known as child class 
        parent -> Base     -> Super 
        child  -> Derived  -> Sub 

        1) Single - single level -  inheritance    A -> B 
        2) multilevel - inheritance  A->B->C   A->B->C->D->E 
        3) multiple inheritance  
        4) hirerchical inheritance {tree form }
        5) hybrid [ combine atleast any two ]

-------------------------------------------------------------------------------------------------------       


Kunj   - Student 
Kunj   - Friend 
Brother 
Uncle 
                            Polymorphism 
                compile time            runtime 
            Overloading                          Overriding 
    function overloading                    function Overriding 
    operator overloading 


class A{

    public:
        void add(int a,int b){
            cout<<a+b;
        }
         void add(int a,int b,int c){
            cout<<a+b+c;
        }

        //error 
        int add(int a,int b){
            return a+b;
        }     

};


A obj; 
obj.add(10,20);
obj.add(10,20,30);

 function overloading  -> function must have same name 
                            and 
                          must have unique argument 



class GathiyaRath{
    public:
        void saleGathiya(){

        }

};

class LaxmiGathiyaRath : public GathiyaRath{
        //Overriding
        void saleGathiya(){

        }
};

GathiyaRath g;
g.saleGathiya();

LaxmiGathiyaRath lg;
lg.saleGathiya();
----------------------------------------------------------------------------------------
Ticket Booking System.

Login
Exit 

Login â†’ mobile number 

1.1 	Book Ticket { Gold Silver Diamond -Qty } 
1.2	View Booked Tickets
1.3	Available Tickets 
1.4       Logout

Three Types of Ticket , Diamond - Rs.200 , Gold - Rs.150 , Silver -Rs.100 	
One user can book max 7 Tickets.
Total 60 tickets we have 20 Diamond , 20 Gold and 20 Silver.
User can identified by mobile number. 
